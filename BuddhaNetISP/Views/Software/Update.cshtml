@model BuddhaNetISP.Models.Software
@{
    ViewData["Title"] = "Create";
}
<!DOCTYPE html>
<html lang="en">

<head>
    <title>Update Software</title>
</head>

<body>
    <div class="Category"></div>

    <section class="section">
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox">
                    <div class="ibox-title">
                        <a href="/Software/List" class="btn btn-w-m btn-outline-primary m-l m-b-xs">
                            <i class="fa fa-plus"></i> Back to list
                        </a>
                        <div class="ibox-tools">
                            <a class="collapse-link">
                                <i class="fa fa-chevron-up"></i>
                            </a>
                        </div>
                        <h1 class="card-title font-bold">Update Software</h1>
                    </div>
                    <div class="ibox-content">
                        @using (Html.BeginForm("Update", "Software", FormMethod.Post, new { @class = "row g-3" }))
                        {
                            @Html.HiddenFor(e => e.softwareid)

                            <div class="col-md-4">
                                <label for="SoftwareName" class="form-label">Software Name</label>
                                @Html.TextBoxFor(e => e.softwarename, new { type = "text", placeholder = "Software Name", @class = "form-control", required = "required" })
                                <div class="invalid-feedback">
                                    @Html.ValidationMessageFor(e => e.softwarename, null, new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4">
                                <label for="SoftwareVersion" class="form-label">Software Version</label>
                                @Html.TextBoxFor(e => e.softwareversion, new { type = "text", placeholder = "Software Version", @class = "form-control", required = "required" })
                                <div class="invalid-feedback">
                                    @Html.ValidationMessageFor(e => e.softwareversion, null, new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4">
                                <label for="IsUnderLicense" class="form-label" style="margin-top: 40px;">Is Under License</label>
                                @Html.CheckBoxFor(e => e.isunderlicense, new { @class = "form-check-input", style = "margin-top: 43px;" })
                            </div>

                            <div class="col-12">
                                <button class="btn btn-primary" type="submit">Update</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </section>

    <a href="#" class="back-to-top d-flex align-items-center justify-content-center">
        <i class="bi bi-arrow-up-short"></i>
    </a>
</body>

</html>
